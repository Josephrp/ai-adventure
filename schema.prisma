generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["fullTextSearch"]
}

datasource db {
  provider  = "postgresql"
  url       = env("POSTGRES_PRISMA_URL") // uses connection pooling
  directUrl = env("POSTGRES_URL_NON_POOLING") // uses a direct connection
}

model Adventure {
  id               String   @id @default(uuid())
  creatorId        String
  createdBy        String
  createdAt        DateTime @default(now())
  name             String   @default("Untitled Adventure")
  description      String   @default("No description provivded.")
  agentVersion     String   @default("ai-adventure")
  shortDescription String   @default("No short description provided.")
  image            String?  @default("")
  agentConfig      Json?
  agentDevConfig   Json?

  // Whether to feature
  featured Boolean @default(false)

  // Whether it's visible by others
  public Boolean @default(false)

  tags              String[]            @default([])
  Agents            Agents[]
  CharacterTemplate CharacterTemplate[]
}

model CharacterTemplate {
  id          Int        @id @default(autoincrement())
  name        String
  description String
  image       String
  createdAt   DateTime   @default(now())
  updatedAt   DateTime   @updatedAt
  Adventure   Adventure? @relation(fields: [adventureId], references: [id])
  adventureId String?
}

model Agents {
  id            Int        @id @default(autoincrement())
  ownerId       String
  agentUrl      String
  handle        String     @default("agent")
  createdAt     DateTime   @default(now())
  Adventure     Adventure? @relation(fields: [adventureId], references: [id])
  adventureId   String?
  isDevelopment Boolean?   @default(false)
}

model UserEnergy {
  id        Int      @id @default(autoincrement())
  userId    String   @unique
  energy    Int      @default(100)
  energyMax Int      @default(100)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model UserApprovals {
  id         Int     @id @default(autoincrement())
  userId     String  @unique
  isApproved Boolean @default(false)
}

model Subscriptions {
  id             Int      @id @default(autoincrement())
  ownerId        String   @unique
  stripeId       String
  priceId        String
  subscriptionId String
  createdAt      DateTime @default(now())
  updatedAt      DateTime @updatedAt
}

model TopUps {
  id              Int      @id @default(autoincrement())
  ownerId         String
  amountPaidCents Int // Amount paid
  creditIncrease  Int // Energy Added
  reference       String // Stripe reference
  createdAt       DateTime @default(now())
  updatedAt       DateTime @updatedAt
}

model DrawDowns {
  id             Int      @id @default(autoincrement())
  ownerId        String
  creditDecrease Int // Energy Removed
  reference      String // Stripe reference
  createdAt      DateTime @default(now())
  updatedAt      DateTime @updatedAt
}
